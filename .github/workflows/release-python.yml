name: "[auto] release-python"

on:
  push:
    tags:
      - "v*"

env:
  PYTHON_VERSION: "3.10"

jobs:
  build:
    name: Release new version to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install the project
        uses: dronetag/gha-shared/.github/actions/poetry-install@master
        with:
          private-pypi-name: dronetag
          private-pypi-host: ${{ secrets.PRIV_PIP_HOST }}
          private-pypi-user: ${{ secrets.PRIV_PIP_USER }}
          private-pypi-pass: ${{ secrets.PRIV_PIP_PASSWORD }}
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Check version format vMAJOR.MINOR.PATCH(-SUFFIX)
        run: |
          if [[ ! "$GITHUB_REF_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+(\.[a-zA-Z0-9]+)*)?$ ]]; then
            echo "Invalid version format. Expected vMAJOR.MINOR.PATCH(-SUFFIX)?, got ${GITHUB_REF_NAME}"
            exit 1
          fi
      - name: Bump version
        run: |
          echo "Github ref ${GITHUB_REF_NAME:1}"
          poetry version ${GITHUB_REF_NAME:1}
      - name: Commit and push
        run: |
          git config --local user.email "" # Set empty email
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "chore(ci): bump pyproject.toml version to ${GITHUB_REF_NAME:1}"
          git push
      - name: Publish
        run: poetry publish --build -n -r dronetag
