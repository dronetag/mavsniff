name: "RELEASE"

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"

jobs:
  release:
    name: Tag and Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository (full-depth)
      uses: actions/checkout@v4
      with: { fetch-depth: 0 } # Required to determine version

    - name: Get semantic version
      uses: dronetag/actions/semantic-release@main
      id: semantic

    - name: Install the project
      uses: dronetag/gha-shared/.github/actions/poetry-install@master
      with:
        private-pypi-name: dronetag
        private-pypi-host: ${{ secrets.PRIV_PIP_HOST }}
        private-pypi-user: ${{ secrets.PRIV_PIP_USER }}
        private-pypi-pass: ${{ secrets.PRIV_PIP_PASSWORD }}
        python-version: "${{ env.PYTHON_VERSION }}"

    - name: Build the project
      run: |
        poetry version "${{ steps.semantic.outputs.version }}"
        poetry build

    - name: Commit and tag
      if: ${{ steps.semantic.outputs.existed == 'false' }}
      uses: dronetag/actions/release@main
      with:
        github-token: ${{ github.token }}
        changelog: ${{ steps.semantic.outputs.changelog }}
        commit-changelog: true
        version: ${{ steps.semantic.outputs.version }}

    - name: Publish package with poetry
      run: |
        poetry publish -n -r dronetag --skip-existing
